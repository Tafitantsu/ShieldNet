# Example Configuration for ShieldNet Client

logging:
  # Path to the log file. Can be absolute or relative to this config file's directory.
  log_file: "client.log"
  # Logging level: DEBUG, INFO, WARNING, ERROR, CRITICAL
  log_level: "INFO"
  # Max size of the log file before rotation (in bytes)
  log_rotation_bytes: 10485760 # 10MB
  # Number of backup log files to keep
  log_backup_count: 5

local_listener:
  # Host for the local application to connect to
  host: "127.0.0.1"
  # Port for the local application to connect to
  port: 1080

remote_server:
  # Hostname or IP address of the ShieldNet server
  host: "localhost" # Replace with actual server hostname/IP
  # Port on which the ShieldNet server is listening
  port: 8443
  # Path to the CA certificate file used to verify the ShieldNet server's certificate.
  # Required if the server uses a certificate signed by a custom CA (e.g., self-signed).
  # Can be absolute or relative to this config file's directory.
  server_ca_cert: "certs/ca.crt" # Example: "certs/ca.crt" or "/etc/shieldnet/certs/ca.crt"

tls:
  # Client certificate for mTLS authentication.
  # Required if the server is configured for mTLS and needs to verify the client.
  # Can be absolute or relative to this config file's directory.
  client_cert: "certs/client.crt" # Example: "certs/client.crt"
  # Client private key for mTLS authentication.
  # Can be absolute or relative to this config file's directory.
  client_key: "certs/client.key"   # Example: "certs/client.key"

  # Minimum TLS version to use. Options: "TLSv1.2", "TLSv1.3".
  # It's recommended to use "TLSv1.2" or "TLSv1.3".
  min_version: "TLSv1.2"

  # Optional: If the server's certificate CN/SAN does not match remote_server.host,
  # you can specify the expected CN here for validation.
  # expected_server_cn: "specific.server.common.name"

timeouts:
  # Timeout for establishing the initial TCP connection to the remote server (seconds)
  connect: 10
  # Timeout for the TLS handshake with the remote server (seconds)
  tls_handshake: 15
  # Timeout for individual socket read/write operations during data forwarding (seconds)
  # Set to 0 or a very high value for no timeout (not recommended for all scenarios).
  socket_data: 60
  # Base delay (in seconds) before the first reconnection attempt if connection to server fails.
  # Subsequent retries will likely use an exponential backoff based on this.
  reconnect_delay_base: 5
  # Maximum number of reconnection attempts before giving up.
  # Set to 0 for no retries, or a negative value for indefinite retries (use with caution).
  reconnect_max_retries: 5

# Example of how a more complex, nested structure might be accessed:
# advanced_options:
#   feature_x:
#     enabled: true
#     parameter_y: 100
